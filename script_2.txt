_ students (ui , database)
_ attendance

&student -> attendance (attendace is gonna have the student's primary key as a foreign key)
&attendance_status -> attendance (attendance is gonna have the attendance_status's priamry key as a fk)

____ database (dojo_database)
student (table)
_student_id(integer) pk (primary key) auto_increment
_first_name(varchar)
_last_name(varchar)

attendance_status (table)
_status_id(integer) pk (primary key) auto_increment
_status_name(varchar)

attendance (table)
_attendance_id(integer) pk (primary key) auto_increment
_status_id(integer) fk (foreign key) 
_student_id(integer) fk (foreign key)

-------------------------

+ in this video we're gonna try to make a simple app that works with what we've summirized so far,
  we're gonna make the ui, connect that to a db that we're gonna create, and try to show that data
  to our user first, and then try to work around it and manipulate it from our app.
+ so you could think of our user interface here as a middle man between us and the db, or like
  people call it these days (API: make sure to google that) 

+ in order for us to start, we need to ask some questions! we always need a question to get started!
  or have a problem to fix, if it's too large of a problem we need to break it down!

  alright, now let's review our problem again and get ourselves some questions.

====== task (sub-tasks)
create a table that shows all the student's on the db
create a form to add a student, another to update or delete a student (it)
__ think about the above a little bit (that's CRUD) create read(table) update delete

__ we are gonna face another problem, what do we want to store on each student:
    name, age, picture, contact info, address, email, etc...
__ we're gonna deal with problems as they come along the way! so you will get some real practice!
  you can watch me solve them as I go! Anyway we'll cross that brige when we get there!

- why M I saying that? BECAUSE I can't just inticipate every problem I'm gonna face!
  so improvising is my only go here! I guess this is why most teachers don't go with real world
    problems!! haha


